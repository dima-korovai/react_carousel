{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","imagesAmount","props","images","length","itemWidth","movedDistance","gap","step","frameSize","animationDuration","infinite","handleImagesNext","setState","leftWidth","handleImagesPrev","this","listStyle","transform","transition","className","style","width","map","image","index","marginRight","src","alt","disabled","type","onClick","value","min","max","onChange","e","target","React","Component","App","frame","moveSpeed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50f7e6c1.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  imagesAmount: number,\n  itemWidth : number,\n  movedDistance: number,\n  gap: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    imagesAmount: this.props.images.length,\n    itemWidth: this.props.itemWidth,\n    movedDistance: 0,\n    gap: 0,\n    step: this.props.step,\n    frameSize: this.props.frameSize,\n    animationDuration: this.props.animationDuration,\n    infinite: this.props.infinite,\n  };\n\n  handleImagesNext = () => {\n    const {\n      imagesAmount,\n      itemWidth,\n      movedDistance,\n      gap,\n      step,\n      infinite,\n      frameSize,\n    } = this.state;\n\n    if (infinite === true) {\n      this.setState({ movedDistance: 0 });\n    }\n\n    const totalWidth = imagesAmount * itemWidth;\n\n    if ((movedDistance + frameSize * itemWidth)\n      < (imagesAmount * itemWidth)) {\n      const leftWidth = (totalWidth - (movedDistance\n        + (frameSize * itemWidth)));\n\n      if ((leftWidth <= itemWidth * step + gap)) {\n        this.setState(\n          { movedDistance: movedDistance + leftWidth },\n        );\n      } else {\n        this.setState(\n          {\n            movedDistance: movedDistance + (itemWidth + gap) * step,\n          },\n        );\n      }\n    }\n  };\n\n  handleImagesPrev = () => {\n    const {\n      imagesAmount,\n      itemWidth,\n      movedDistance,\n      gap,\n      step,\n      infinite,\n      frameSize,\n    } = this.state;\n\n    const totalWidth = imagesAmount * itemWidth;\n    const leftWidth = (totalWidth - (frameSize * itemWidth));\n\n    if (infinite === true) {\n      this.setState({ movedDistance: leftWidth });\n    } else if (movedDistance >= ((itemWidth + gap) * step)) {\n      this.setState({\n        movedDistance: movedDistance - (itemWidth + gap) * step,\n      });\n    } else {\n      this.setState({\n        movedDistance: movedDistance - movedDistance,\n      });\n    }\n  };\n\n  render() {\n    const { images } = this.props;\n    const {\n      imagesAmount,\n      itemWidth,\n      movedDistance,\n      gap,\n      step,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const listStyle = {\n      transform: `translateX(${-movedDistance}px`,\n      transition: `${animationDuration}ms`,\n    };\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${itemWidth * frameSize}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={listStyle}\n        >\n          {images.map((image, index) => {\n            return (\n              <li\n                className=\"Carousel__item\"\n                key={image}\n                style={{ marginRight: `${gap}px` }}\n              >\n                <img\n                  src={image}\n                  alt={`${index + 1}`}\n                  width={`${itemWidth}`}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            disabled={movedDistance === 0 && infinite === false}\n            className=\"Carousel__button Carousel__button--prev\"\n            type=\"button\"\n            onClick={this.handleImagesPrev}\n          >\n            Prev\n          </button>\n\n          <button\n            data-cy=\"next\"\n            disabled={movedDistance >= ((imagesAmount - frameSize)\n              * (itemWidth + gap)) && infinite === false}\n            className=\"Carousel__button Carousel__button--next\"\n            type=\"button\"\n            onClick={this.handleImagesNext}\n          >\n            Next\n          </button>\n        </div>\n\n        <form className=\"Carousel__form\">\n          <label className=\"Carousel__form__label\">\n            {'Moving step: '}\n            <input\n              className=\"Carousel__form__input\"\n              type=\"number\"\n              value={step}\n              min=\"1\"\n              max=\"5\"\n              step=\"1\"\n              onChange={(e) => {\n                this.setState({ step: +e.target.value });\n              }}\n            />\n          </label>\n          <label className=\"Carousel__form__label\">\n            {'Frame size: '}\n            <input\n              className=\"Carousel__form__input\"\n              type=\"number\"\n              value={frameSize}\n              min=\"2\"\n              max=\"5\"\n              step=\"1\"\n              onChange={(e) => {\n                this.setState({ frameSize: +e.target.value });\n              }}\n            />\n          </label>\n          <label className=\"Carousel__form__label\">\n            {'Image size: '}\n            <input\n              className=\"Carousel__form__input\"\n              type=\"number\"\n              value={itemWidth}\n              min=\"110\"\n              max=\"200\"\n              step=\"10\"\n              onChange={(e) => {\n                this.setState({ itemWidth: +e.target.value });\n              }}\n            />\n          </label>\n          <label className=\"Carousel__form__label\">\n            {'Motion speed: '}\n            <input\n              className=\"Carousel__form__input\"\n              type=\"number\"\n              value={animationDuration}\n              min=\"300\"\n              max=\"3000\"\n              step=\"100\"\n              onChange={(e) => {\n                this.setState({ animationDuration: +e.target.value });\n              }}\n            />\n          </label>\n          <label className=\"Carousel__form__label\">\n            {'Infinite: '}\n            <input\n              className=\"Carousel__form__input Carousel__form__input--checkbox\"\n              type=\"checkbox\"\n              onClick={() => {\n                if (infinite === false) {\n                  this.setState({ infinite: true });\n                } else {\n                  this.setState({ infinite: false });\n                }\n              }}\n            />\n          </label>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport './components/Carousel.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  step: number;\n  frame: number;\n  moveSpeed: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    step: 3,\n    frame: 3,\n    moveSpeed: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={this.state.step}\n          frameSize={this.state.frame}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.moveSpeed}\n          infinite={this.state.infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}